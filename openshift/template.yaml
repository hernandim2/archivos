apiVersion: v1
kind: Template
metadata:
  name: esb-mockKTA
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${PARAM_IMAGE_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
  spec:
    selector:
      deploymentConfig: ${PARAM_APP_NAME}
    runPolicy: Serial
    source:
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
    output:
      to:
        kind: ImageStreamTag
        name: ${PARAM_IMAGE_NAME}:latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
  spec:
    selector:
      deploymentConfig: ${PARAM_APP_NAME}
    template:
      metadata:
        labels:
          deploymentConfig: ${PARAM_APP_NAME}
          name: ${PARAM_APP_NAME}
          environment: dev
          tier: backend
          frecuencia: on-demand
          mensajeEntrada: rest
          critico: "si"
          protocolo: https
          asincronico: "no"
      spec:
        containers:
          - name: ${PARAM_APP_NAME}
            env:
              - name: TZ
                value: America/Argentina/Buenos_Aires
              - name: JAVA_OPTIONS
                value: >-
                  -Dext.properties.file=file:/opt/config/application.properties
                  -Djavax.net.ssl.trustStore=/tmp/src/classes/certs/ssocert.jks
                  -Djavax.net.ssl.trustStorePassword=edenor
              -  name: SERVICE_CCB_USER
                 valueFrom:
                   secretKeyRef:
                     key: service.ccb.user
                     name: edenor-service-ccb-secret
              -  name: SERVICE_CCB_PASSWORD
                 valueFrom:
                   secretKeyRef:
                     key: service.ccb.password
                     name: edenor-service-ccb-secret
            image: ${PARAM_IMAGE_NAME}:latest
            ports:
              - containerPort: 9090
                protocol: TCP
              - containerPort: 8081
                protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /actuator/health
                port: 8081
                scheme: HTTP
              initialDelaySeconds: 160
              periodSeconds: 90
              successThreshold: 1
              timeoutSeconds: 120
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /actuator/health
                port: 8081
                scheme: HTTP
              initialDelaySeconds: 120
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 120
            resources:
              limits:
                cpu: 300m
                memory: 512Mi
              requests:
                cpu: 50m
                memory: 512Mi
            volumeMounts:
            - mountPath: /opt/config
              name: ${PARAM_APP_NAME}-config-vol
            - mountPath: /opt/secret/ccb
              name: edenor-service-ccb-secret
        volumes:
        - name: edenor-service-ccb-secret
          secret:
             defaultMode: 420
             secretName: edenor-service-ccb-secret
        - configMap:
            defaultMode: 420
            name: ${PARAM_APP_NAME}-config
          name: ${PARAM_APP_NAME}-config-vol
    triggers: []
    replicas: 1
    strategy:
      type: Rolling
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
  spec:
    ports:
    - port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      deploymentConfig: ${PARAM_APP_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
  spec:
    tls:
      termination: edge
    to:
      kind: Service
      name: ${PARAM_APP_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    application.properties: |-
      server.contextPath=/
      cxf.path=/service

      camel.component.servlet.mapping.contextPath=/api/*

      logging.config=classpath:logback.xml

      # the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
      camel.springboot.name=eps-rest-services

      # lets listen on all ports to ensure we can be invoked from the pod IP
      server.address=0.0.0.0
      management.address=0.0.0.0

      #EXISTEPP WebService
      #ws.existepp.endpointAddress=http://demo4049145.mockable.io/ExistePP1
      ws.existepp.endpointAddress=http://localhost:9090/service/CamelContext/mockKTA


  kind: ConfigMap
  metadata:
    name: ${PARAM_APP_NAME}-config
parameters:
- description: The application name
  displayName: Application name
  name: PARAM_APP_NAME
  value: esb-mockKTA
  required: true
- description: The image name
  displayName: Image name
  name: PARAM_IMAGE_NAME
  value: esb-mockKTA
  required: true
